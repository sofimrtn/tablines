prefix steel: <http://ontorule-project.eu/resources/steel#>

{
set ?FILE in files "PruebaSencilla.xls"
    For ?idCoil in rows filter matches(?idCoil , "[0-9]*" ) until matches(?idCoil, "\s" )
        match @tuple[?idCoil,?codeOutput,?steelGrade,?productType,?minWidth,?maxWidth,
                   ?minThick,?maxThick,?minZincThick,?maxZincThick,?minWeight,?maxWeight,
                   ?targetElongation, ?minElongation, ?maxElongation, ?minYieldStr, ?maxYieldStr,
                   ?minEndTemp, ?maxEndTemp] as horizontal
        let ?idCoilAsResource = RESOURCE(?idCoil, <http://ontorule-project.eu/resources/steeldata#coil>)
        let ?orderAsResource = RESOURCE(?idCoil, <http://ontorule-project.eu/resources/steeldata#order>)
        let ?steelGradeAsResource = RESOURCE(?steelGrade, <http://ontorule-project.eu/resources/steel#>)
        let ?asignacion = ?codeOutput
        match ?prueba is located 1 right ?idCoil
}

{
Set ?FILE in files "points.xls"
    For ?idCoil in rows filter matches(?idCoil , "[0-9]*" ) until matches(?idCoil, "\s")
        match @tuple[?idCoil,?xPos,?yieldStrength,?flattenerElongation,?skinPassElongation,
                   ?tractionLimit,?width,?weight,?thickness,?coatingBottom,
                   ?coatingTop,?endHeatingTemp] as horizontal
        let ?idCoilAsResource = RESOURCE(?idCoil, <http://ontorule-project.eu/resources/steeldata#coil>)
        let ?idSamplep= ADD(?idCoil,"_") 
        let ?idSamplePoint= ADD(?idSamplep, ?xPos)
        let ?idSamplePointAsResource = RESOURCE(?idSamplePoint, <http://ontorule-project.eu/resources/steel#sp>)
}

{ 
steel:steelGrade steel:steelGrade ?prueba .
             
?idCoilAsResource a steel:Coil ;
    steel:order ?orderAsResource ;
    steel:steelGrade ?steelGradeAsResource ;
    steel:codeOutput ?codeOutput ;
    steel:identifier ?idCoil .
             
?orderAsResource a steel:Order;
    steel:widthMin ?minWidth ;
    steel:widthMax ?maxWidth ;
    steel:originalCoilThicknessMin ?minThick ;
    steel:originalCoilThicknessMax ?maxThick ;
    steel:zincThicknessMin ?minZincThick ;
    steel:zincThicknessMax ?maxZincThick ;
    steel:weightMin ?minWeight ;
    steel:weightMax ?maxWeight ;
    steel:skinPassElongationMin ?minElongation ;
    steel:skinPassElongationMax ?maxElongation ;
    steel:yieldStrengthMin ?minYieldStr ;
    steel:yieldStrengthMax ?maxYieldStr ;
    steel:temperatureMin ?minEndTemp ;
    steel:temperatureMax ?maxEndTemp        
}
             
{ 
?idSamplePointAsResource a steel:SamplingPoint ;
    steel:flattenerElongation ?flattenerElongation;
    steel:topCoatingThickness ?coatingTop;
    steel:bottomCoatingThickness ?coatingBottom;
    steel:originalCoilThickness ?thickness;
    steel:yieldStrength ?yieldStrength;
    steel:skinPassElongation ?skinPassElongation;
    steel:inCoil ?idCoilAsResource;
    steel:lengthScope ?tractionLimit;
    steel:temperature ?endHeatingTemp;
    steel:position ?xPos 
}