El lenguaje tabels para la conversión de formatos de datos estructurados a RDF está formado por los siguientes elementos:

* Directivas

* Definición de prefijos: simplificación de URI's mediante la definición de prefijos para las mismas. La URI debe ir contenida entre los caracteres "<>". Estos prefijos pueden ser reusados en la definición de los templates.
{code}
    prefix _prefijo_ : _uri_
{code}

* Descripción del origen de datos
*** [Sentencias de dimensiones|guide:dimensionStatements]: Este tipo de sentencias tabels permiten recorrer el origen de datos indicando las dimensiones por las que iterar, condiciones de inicio, parada y salto.
*** [Sentencias condicionales|guide:conditionalStatements]: Sentencias tabels que varían el flujo de ejecución normal de un programa tabels en función de una condición.
*** [Sentencias de asignación de variables|guide:variableAssignmentStatements]: Su función es asignar valores del origen de datos a variables y modificarlos.
* Variables: comienzan con '?' seguidas de caractéres alfanuméricos.
    {code}
     ?testResource
    {code}

* Tuplas: conjunto ordenado de *N* Variables separado por comas y delimitado por los caracteres '\[' y '\]'
    {code}
     [?variable1, ?variable2]
    {code}

* Posición: indica una posición en el origen de datos. Es posible definir las posiciónes de dos formas distintas:
*** Posición absoluta: Indicando el lugar exacto en el origen de datos
{code}
    B12
{code}
*** Posición relativa a una variable: Relaciona la posición a la de una variable, ya sea tomando la misma o calculandola en función de unas indicaciones.
{code}
   2 RIGHT OF ?rowId
{code} 

* [Expresiones|guide:functions]: funciones que permiten modificar el valor de las variables.

* Templates: Reglas para la instanciación de las variables obtenidas en el recorrido del origen de datos. Sigue la sintaxis N3 sustituyendo sujeto y/o predicado de la tripleta por variables definidas en el código previo o por literales(cadenas de texto o números). 
{code}
    ?resources a ex:SomeResource .
    ?resources ex:prueba ?prueba .
    ?resources ex:col2 ?col2
{code}

Para un mismo programa tabels es posible definir más de un template, precedidos por la palabra reservada _construct_ y separandose entre ellos por llaves (construct{template1} construct{template2}).
Cada uno de estos templates generará una o más porciones del RDF final. Cada Template se instanciará cuando todas las variables contenidas en el tengan valor y alguna de las mismas haya cambiado desde la última instanciación. Cada tripleta contenida en el template debe estar seguida del caracter separador de tripletas "." excepto la prévia a la llave de cierre del template. Si más de una tripleta comparte sujeto, este puede omitirse en las sucesivas si se separan entre si con el caracter ";". 
 
 {code}
 construct
 {
    ?resources a ex:SomeResource .
    [] ex:prueba ?prueba .
    [ex:col2 ?col2]
 }
 
 construct
 {
    ?resource rdf:type ex:Movie ;
              ex:rank ?rankInt ;
              ex:rating ?ratingFloat ;
              rdfs:label ?titleTrimmed ;
              ex:year ?year ;
              ex:votes ?votesInt ;
              owl:sameAs ?dbpediaResource 
  }
   
{code}

